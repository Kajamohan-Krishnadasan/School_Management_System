/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package School;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kajamohan
 */
public class TeacherPage extends javax.swing.JFrame {

    /**
     * Creates new form TeacherPage
     */
 
    private String userName,password;
    private int posX = 0, posY = 0;
    private ConnectDatabase database = new ConnectDatabase();
    SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy-MM-dd");
    
    public TeacherPage() throws SQLException {
        initComponents();
        initialSetting();
        setStaffsDetais();
        setStudentsDetais();
    }  
    
    private void initialSetting(){
        HeaderSetting h1 =  new HeaderSetting();
        h1.theader(TeacherTimetable.getTableHeader());  
        h1.HeaderRenderer(TeacherTimetable);
        
        
//        StaffsTable/
        HeaderSetting h2 =  new HeaderSetting();
        h2.theader(StaffsTable.getTableHeader());  
        h2.HeaderRenderer(StaffsTable);

//        StudentTable
        HeaderSetting h3 =  new HeaderSetting();
        h3.theader(StudentTable.getTableHeader());  
        h3.HeaderRenderer(StudentTable);
        
        StaffsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        StudentTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
    
    public void setUserDetails(String UN, String PWD) throws SQLException{    
        userName = UN;
        password = PWD;        
        
        jScrollPane1.getVerticalScrollBar().setValue(0);
        
        String recivedValue [] = database.getDetails(userName,"teachertab");
        
        IdTxt.setText(recivedValue[0]);
        TeacherPass.setText(password);
        
        NameTxt.setText(recivedValue[1]);
        userNameDisplay.setText(recivedValue[1]);
        
        RoleTxt.setText(recivedValue[2]);
        GenTxt.setText(recivedValue[3]);
        DobTxt.setText(recivedValue[4]);
        AppoimentTxt.setText(recivedValue[5]);
        EmailTxt.setText(recivedValue[6]);
        MobileTxt.setText(recivedValue[7]);
        NicTxt.setText(recivedValue[8]);        
        AddressTxt.setText(recivedValue[9]);
        setValues();
    }
    
    public void setValues(){
        StaffID.setText(IdTxt.getText());
        StaffPassword.setText(String.valueOf(TeacherPass.getPassword()));
        StaffName.setText(NameTxt.getText());
        StaffRole.setText(RoleTxt.getText());
        
        if(GenTxt.toString().contains("female"))
            StaffGender.setSelectedIndex(2);
        else
            StaffGender.setSelectedIndex(1);
             
        StaffDoB.setDate(database.DOBdate);
        StaffAppoimentDate.setDate(database.APPOIMENTdate);
        StaffEmail.setText(EmailTxt.getText());
        StaffMobile.setText(MobileTxt.getText());
        StaffNIC.setText(NicTxt.getText());
        StaffAddress.setText(AddressTxt.getText());             
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        userNameDisplay = new javax.swing.JLabel();
        LogoutBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        TeacherMainPanel = new javax.swing.JTabbedPane();
        myAccScrollTab = new javax.swing.JScrollPane();
        myAccTab = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        EmailTxt = new javax.swing.JLabel();
        MobileTxt = new javax.swing.JLabel();
        NicTxt = new javax.swing.JLabel();
        DobTxt = new javax.swing.JLabel();
        AppoimentTxt = new javax.swing.JLabel();
        RoleTxt = new javax.swing.JLabel();
        IdTxt = new javax.swing.JLabel();
        NameTxt = new javax.swing.JLabel();
        UpdateOrChangeBtn = new javax.swing.JButton();
        HideViewBtn = new javax.swing.JToggleButton();
        TeacherPass = new javax.swing.JPasswordField();
        jLabel25 = new javax.swing.JLabel();
        GenTxt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AddressTxt = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        sclStaffTab = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        searchStaff = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        StaffsTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        stdTab = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        StudentSearch = new javax.swing.JTextField();
        jScrollPane11 = new javax.swing.JScrollPane();
        StudentTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        subjectTab = new javax.swing.JPanel();
        ViewSubjectBtn = new javax.swing.JButton();
        ViewMarksBtn = new javax.swing.JButton();
        AddMarksBtn = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        timetableTab = new javax.swing.JPanel();
        SelectTimetableType = new javax.swing.JComboBox<>();
        YearTerm = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        TeacherTimetable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        reportTab = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        ReportTxt = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        SubmitBtn = new javax.swing.JButton();
        ClearBtn = new javax.swing.JButton();
        manageAccScrollTab = new javax.swing.JScrollPane();
        manageAccTab = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        StaffID = new javax.swing.JLabel();
        StaffName = new javax.swing.JTextField();
        StaffRole = new javax.swing.JTextField();
        HideViewBtn1 = new javax.swing.JToggleButton();
        StaffGender = new javax.swing.JComboBox<>();
        StaffDoB = new com.toedter.calendar.JDateChooser();
        StaffAppoimentDate = new com.toedter.calendar.JDateChooser();
        StaffEmail = new javax.swing.JTextField();
        StaffMobile = new javax.swing.JTextField();
        StaffNIC = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        StaffAddress = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        StaffPassword = new javax.swing.JPasswordField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        UpdateBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Teacher ");
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 102), 10, true));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("School Management System");

        userNameDisplay.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        userNameDisplay.setForeground(new java.awt.Color(0, 102, 102));
        userNameDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userNameDisplay.setText("Teacher Name");

        LogoutBtn.setBackground(new java.awt.Color(255, 102, 102));
        LogoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/School/Icons/logout.png"))); // NOI18N
        LogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutBtnActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        TeacherMainPanel.setBackground(new java.awt.Color(255, 255, 255));
        TeacherMainPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        TeacherMainPanel.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        TeacherMainPanel.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        TeacherMainPanel.setMinimumSize(new java.awt.Dimension(500, 500));
        TeacherMainPanel.setOpaque(true);

        myAccScrollTab.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));

        myAccTab.setBackground(new java.awt.Color(255, 255, 255));
        myAccTab.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        myAccTab.setMaximumSize(new java.awt.Dimension(600, 820));
        myAccTab.setMinimumSize(new java.awt.Dimension(500, 700));
        myAccTab.setPreferredSize(new java.awt.Dimension(600, 820));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Your ID :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Your Password :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Name :");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Email ID :");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Mobile Number :");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("NIC Number :");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Date of Birth :");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Appoiment Date :");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Role : ");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Address :");
        jLabel11.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        EmailTxt.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        EmailTxt.setForeground(new java.awt.Color(153, 153, 153));

        MobileTxt.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        MobileTxt.setForeground(new java.awt.Color(153, 153, 153));

        NicTxt.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        NicTxt.setForeground(new java.awt.Color(153, 153, 153));

        DobTxt.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        DobTxt.setForeground(new java.awt.Color(153, 153, 153));

        AppoimentTxt.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        AppoimentTxt.setForeground(new java.awt.Color(153, 153, 153));

        RoleTxt.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        RoleTxt.setForeground(new java.awt.Color(153, 153, 153));

        IdTxt.setBackground(new java.awt.Color(204, 255, 255));
        IdTxt.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        IdTxt.setForeground(new java.awt.Color(153, 153, 153));
        IdTxt.setOpaque(true);

        NameTxt.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        NameTxt.setForeground(new java.awt.Color(153, 153, 153));

        UpdateOrChangeBtn.setBackground(new java.awt.Color(0, 102, 102));
        UpdateOrChangeBtn.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        UpdateOrChangeBtn.setText("Update/Change");
        UpdateOrChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateOrChangeBtnActionPerformed(evt);
            }
        });

        HideViewBtn.setForeground(new java.awt.Color(0, 204, 0));
        HideViewBtn.setIcon(new javax.swing.ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\hide.png")); // NOI18N
        HideViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HideViewBtnActionPerformed(evt);
            }
        });

        TeacherPass.setEditable(false);
        TeacherPass.setBackground(new java.awt.Color(204, 255, 255));
        TeacherPass.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        TeacherPass.setForeground(new java.awt.Color(153, 153, 153));
        TeacherPass.setBorder(null);
        TeacherPass.setDisabledTextColor(new java.awt.Color(204, 255, 255));
        TeacherPass.setFocusable(false);

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(102, 102, 102));
        jLabel25.setText("Gender :");

        GenTxt.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        GenTxt.setForeground(new java.awt.Color(153, 153, 153));

        AddressTxt.setEditable(false);
        AddressTxt.setColumns(20);
        AddressTxt.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        AddressTxt.setRows(5);
        AddressTxt.setTabSize(10);
        AddressTxt.setBorder(null);
        AddressTxt.setEnabled(false);
        AddressTxt.setFocusable(false);
        AddressTxt.setPreferredSize(new java.awt.Dimension(300, 105));
        AddressTxt.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(AddressTxt);

        javax.swing.GroupLayout myAccTabLayout = new javax.swing.GroupLayout(myAccTab);
        myAccTab.setLayout(myAccTabLayout);
        myAccTabLayout.setHorizontalGroup(
            myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myAccTabLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myAccTabLayout.createSequentialGroup()
                        .addGroup(myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40)
                        .addGroup(myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RoleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DobTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NicTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MobileTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AppoimentTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(myAccTabLayout.createSequentialGroup()
                                .addGroup(myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(TeacherPass, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(IdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addComponent(HideViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(myAccTabLayout.createSequentialGroup()
                        .addGroup(myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GenTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(myAccTabLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(UpdateOrChangeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        myAccTabLayout.setVerticalGroup(
            myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myAccTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myAccTabLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(myAccTabLayout.createSequentialGroup()
                        .addComponent(IdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(myAccTabLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(HideViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(myAccTabLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(TeacherPass, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(NameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MobileTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(NicTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DobTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AppoimentTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(RoleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(myAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(UpdateOrChangeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        myAccScrollTab.setViewportView(myAccTab);

        TeacherMainPanel.addTab("My Account", myAccScrollTab);

        sclStaffTab.setBackground(new java.awt.Color(255, 255, 255));
        sclStaffTab.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 5, true));
        sclStaffTab.setPreferredSize(new java.awt.Dimension(700, 500));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 153, 153));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("School Staffs Details");

        jLabel29.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("Search :");

        searchStaff.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        searchStaff.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchStaffKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchStaffKeyReleased(evt);
            }
        });

        StaffsTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StaffsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Name", "Email", "Mobile"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        StaffsTable.setRowHeight(40);
        StaffsTable.setShowGrid(true);
        StaffsTable.getTableHeader().setReorderingAllowed(false);
        StaffsTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                StaffsTableFocusGained(evt);
            }
        });
        StaffsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StaffsTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(StaffsTable);
        if (StaffsTable.getColumnModel().getColumnCount() > 0) {
            StaffsTable.getColumnModel().getColumn(0).setResizable(false);
            StaffsTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            StaffsTable.getColumnModel().getColumn(1).setResizable(false);
            StaffsTable.getColumnModel().getColumn(1).setPreferredWidth(250);
            StaffsTable.getColumnModel().getColumn(2).setResizable(false);
            StaffsTable.getColumnModel().getColumn(2).setPreferredWidth(250);
            StaffsTable.getColumnModel().getColumn(3).setResizable(false);
            StaffsTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        javax.swing.GroupLayout sclStaffTabLayout = new javax.swing.GroupLayout(sclStaffTab);
        sclStaffTab.setLayout(sclStaffTabLayout);
        sclStaffTabLayout.setHorizontalGroup(
            sclStaffTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sclStaffTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168))
            .addGroup(sclStaffTabLayout.createSequentialGroup()
                .addGroup(sclStaffTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sclStaffTabLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sclStaffTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sclStaffTabLayout.setVerticalGroup(
            sclStaffTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sclStaffTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sclStaffTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jScrollPane2.setViewportView(sclStaffTab);

        TeacherMainPanel.addTab("School Staffs", jScrollPane2);

        stdTab.setBackground(new java.awt.Color(255, 255, 255));
        stdTab.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 5, true));
        stdTab.setPreferredSize(new java.awt.Dimension(1160, 510));

        jLabel30.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 153, 153));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("School Students Details");

        jLabel31.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Search :");

        StudentSearch.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        StudentSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                StudentSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                StudentSearchKeyReleased(evt);
            }
        });

        StudentTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "ID", "Name", "Class", "Addmission Date", "Email", "Mobile"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        StudentTable.setRowHeight(30);
        StudentTable.setShowGrid(true);
        StudentTable.getTableHeader().setReorderingAllowed(false);
        StudentTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                StudentTableFocusGained(evt);
            }
        });
        StudentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StudentTableMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(StudentTable);
        if (StudentTable.getColumnModel().getColumnCount() > 0) {
            StudentTable.getColumnModel().getColumn(0).setResizable(false);
            StudentTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            StudentTable.getColumnModel().getColumn(1).setResizable(false);
            StudentTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            StudentTable.getColumnModel().getColumn(2).setResizable(false);
            StudentTable.getColumnModel().getColumn(2).setPreferredWidth(200);
            StudentTable.getColumnModel().getColumn(3).setResizable(false);
            StudentTable.getColumnModel().getColumn(3).setPreferredWidth(250);
            StudentTable.getColumnModel().getColumn(4).setResizable(false);
            StudentTable.getColumnModel().getColumn(4).setPreferredWidth(200);
            StudentTable.getColumnModel().getColumn(5).setResizable(false);
            StudentTable.getColumnModel().getColumn(5).setPreferredWidth(300);
            StudentTable.getColumnModel().getColumn(6).setResizable(false);
            StudentTable.getColumnModel().getColumn(6).setPreferredWidth(200);
        }

        javax.swing.GroupLayout stdTabLayout = new javax.swing.GroupLayout(stdTab);
        stdTab.setLayout(stdTabLayout);
        stdTabLayout.setHorizontalGroup(
            stdTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stdTabLayout.createSequentialGroup()
                .addGap(0, 197, Short.MAX_VALUE)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(186, 186, 186))
            .addGroup(stdTabLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(StudentSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(781, 788, Short.MAX_VALUE))
            .addGroup(stdTabLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane11)
                .addContainerGap())
        );
        stdTabLayout.setVerticalGroup(
            stdTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stdTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(stdTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jScrollPane3.setViewportView(stdTab);

        TeacherMainPanel.addTab("Students", jScrollPane3);

        subjectTab.setBackground(new java.awt.Color(255, 255, 255));
        subjectTab.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 5, true));
        subjectTab.setMaximumSize(new java.awt.Dimension(614, 396));
        subjectTab.setPreferredSize(new java.awt.Dimension(614, 396));

        ViewSubjectBtn.setBackground(new java.awt.Color(0, 102, 102));
        ViewSubjectBtn.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        ViewSubjectBtn.setForeground(new java.awt.Color(255, 255, 255));
        ViewSubjectBtn.setText("View Subjects");
        ViewSubjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewSubjectBtnActionPerformed(evt);
            }
        });

        ViewMarksBtn.setBackground(new java.awt.Color(0, 102, 102));
        ViewMarksBtn.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        ViewMarksBtn.setForeground(new java.awt.Color(255, 255, 255));
        ViewMarksBtn.setText("View Marks");
        ViewMarksBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewMarksBtnActionPerformed(evt);
            }
        });

        AddMarksBtn.setBackground(new java.awt.Color(0, 102, 102));
        AddMarksBtn.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        AddMarksBtn.setForeground(new java.awt.Color(255, 255, 255));
        AddMarksBtn.setText("Add Marks");
        AddMarksBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddMarksBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout subjectTabLayout = new javax.swing.GroupLayout(subjectTab);
        subjectTab.setLayout(subjectTabLayout);
        subjectTabLayout.setHorizontalGroup(
            subjectTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subjectTabLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(subjectTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ViewSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddMarksBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ViewMarksBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );
        subjectTabLayout.setVerticalGroup(
            subjectTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subjectTabLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(ViewSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(ViewMarksBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(AddMarksBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jScrollPane4.setViewportView(subjectTab);

        TeacherMainPanel.addTab("Subjects", jScrollPane4);

        timetableTab.setBackground(new java.awt.Color(255, 255, 255));
        timetableTab.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 5, true));
        timetableTab.setMaximumSize(new java.awt.Dimension(960, 600));
        timetableTab.setPreferredSize(new java.awt.Dimension(960, 450));

        SelectTimetableType.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        SelectTimetableType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Time Table", "Your Time Table", "Your Class Time Table" }));
        SelectTimetableType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectTimetableTypeActionPerformed(evt);
            }
        });

        YearTerm.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        YearTerm.setForeground(new java.awt.Color(153, 153, 153));

        TeacherTimetable.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        TeacherTimetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TeacherTimetable.setRowHeight(40);
        TeacherTimetable.setShowGrid(true);
        TeacherTimetable.getTableHeader().setReorderingAllowed(false);
        jScrollPane9.setViewportView(TeacherTimetable);
        if (TeacherTimetable.getColumnModel().getColumnCount() > 0) {
            TeacherTimetable.getColumnModel().getColumn(0).setResizable(false);
            TeacherTimetable.getColumnModel().getColumn(1).setResizable(false);
            TeacherTimetable.getColumnModel().getColumn(2).setResizable(false);
            TeacherTimetable.getColumnModel().getColumn(3).setResizable(false);
            TeacherTimetable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout timetableTabLayout = new javax.swing.GroupLayout(timetableTab);
        timetableTab.setLayout(timetableTabLayout);
        timetableTabLayout.setHorizontalGroup(
            timetableTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timetableTabLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(timetableTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(timetableTabLayout.createSequentialGroup()
                        .addComponent(SelectTimetableType, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(YearTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45))
        );
        timetableTabLayout.setVerticalGroup(
            timetableTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timetableTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(timetableTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(YearTerm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SelectTimetableType, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        LocalDate Current = LocalDate.now();
        YearTerm.setText(Current.toString());

        jScrollPane5.setViewportView(timetableTab);

        TeacherMainPanel.addTab("Time Table", jScrollPane5);

        reportTab.setBackground(new java.awt.Color(255, 255, 255));
        reportTab.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 5, true));
        reportTab.setMaximumSize(new java.awt.Dimension(600, 400));
        reportTab.setPreferredSize(new java.awt.Dimension(600, 400));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 153, 153));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Report");

        ReportTxt.setColumns(20);
        ReportTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ReportTxt.setRows(5);
        jScrollPane8.setViewportView(ReportTxt);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 153, 153));
        jLabel13.setText("Tell Your Problem :");

        SubmitBtn.setBackground(new java.awt.Color(0, 102, 102));
        SubmitBtn.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        SubmitBtn.setText("Submit");
        SubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBtnActionPerformed(evt);
            }
        });

        ClearBtn.setBackground(new java.awt.Color(0, 102, 102));
        ClearBtn.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        ClearBtn.setText("Clear");
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reportTabLayout = new javax.swing.GroupLayout(reportTab);
        reportTab.setLayout(reportTabLayout);
        reportTabLayout.setHorizontalGroup(
            reportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportTabLayout.createSequentialGroup()
                .addGroup(reportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reportTabLayout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(reportTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(reportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(reportTabLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(reportTabLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(reportTabLayout.createSequentialGroup()
                                .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(295, 295, 295)
                                .addComponent(SubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        reportTabLayout.setVerticalGroup(
            reportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(reportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        jScrollPane6.setViewportView(reportTab);

        TeacherMainPanel.addTab("Report", jScrollPane6);

        manageAccTab.setBackground(new java.awt.Color(255, 255, 255));
        manageAccTab.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 5, true));
        manageAccTab.setMaximumSize(new java.awt.Dimension(610, 880));
        manageAccTab.setPreferredSize(new java.awt.Dimension(610, 880));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("Address :");

        StaffID.setBackground(new java.awt.Color(204, 255, 255));
        StaffID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        StaffID.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        StaffID.setOpaque(true);

        StaffName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        StaffRole.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        HideViewBtn1.setForeground(new java.awt.Color(0, 204, 0));
        HideViewBtn1.setIcon(new javax.swing.ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\hide.png")); // NOI18N
        HideViewBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HideViewBtn1ActionPerformed(evt);
            }
        });

        StaffGender.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        StaffGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select the Gender", "Male", "Female" }));
        StaffGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffGenderActionPerformed(evt);
            }
        });

        StaffDoB.setFont(new Font("Times New Roman", 0, 18));

        StaffAppoimentDate.setFont(new Font("Times New Roman", 0, 18));

        StaffEmail.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        StaffMobile.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        StaffNIC.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StaffNIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffNICActionPerformed(evt);
            }
        });

        jScrollPane10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        StaffAddress.setColumns(20);
        StaffAddress.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StaffAddress.setRows(5);
        jScrollPane10.setViewportView(StaffAddress);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Staff ID : ");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("Staff Password : ");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Staff Name : ");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Gender :");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Date of Birth :");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 102, 102));
        jLabel20.setText("Appoiment Date :");

        StaffPassword.setBackground(new java.awt.Color(204, 255, 255));
        StaffPassword.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StaffPassword.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(102, 102, 102));
        jLabel21.setText("Role :");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(102, 102, 102));
        jLabel22.setText("Email :");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("Mobile :");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(102, 102, 102));
        jLabel24.setText("NIC Number :");

        UpdateBtn.setBackground(new java.awt.Color(0, 102, 102));
        UpdateBtn.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        UpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        UpdateBtn.setText("Update");
        UpdateBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manageAccTabLayout = new javax.swing.GroupLayout(manageAccTab);
        manageAccTab.setLayout(manageAccTabLayout);
        manageAccTabLayout.setHorizontalGroup(
            manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageAccTabLayout.createSequentialGroup()
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageAccTabLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(StaffNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StaffName, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StaffRole, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StaffDoB, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StaffAppoimentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StaffEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StaffMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StaffPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StaffGender, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addComponent(HideViewBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manageAccTabLayout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(UpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
        manageAccTabLayout.setVerticalGroup(
            manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageAccTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageAccTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StaffPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(manageAccTabLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(HideViewBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffName, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffRole, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StaffGender, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffDoB, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffAppoimentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(manageAccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(UpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        StaffID.setEnabled(false);

        manageAccScrollTab.setViewportView(manageAccTab);

        TeacherMainPanel.addTab("Manage Account", manageAccScrollTab);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(TeacherMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 848, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(TeacherMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(userNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(LogoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(userNameDisplay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LogoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutBtnActionPerformed
        this.dispose();
        LoginPage logout = new LoginPage();
        logout.setVisible(true);
        logout.initailsSetting("Logout Succesfully");
    }//GEN-LAST:event_LogoutBtnActionPerformed

    private void HideViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HideViewBtnActionPerformed
        Icon iconHide = new ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\hide.png");
        Icon iconView = new ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\view.png");
        
       if(HideViewBtn.getModel().isSelected()){
            TeacherPass.setEchoChar((char)0);
            HideViewBtn.setIcon(iconView);
        }else{
            TeacherPass.setEchoChar('*');
            HideViewBtn.setIcon(iconHide);
        }
         

    }//GEN-LAST:event_HideViewBtnActionPerformed

    private void UpdateOrChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateOrChangeBtnActionPerformed
        TeacherMainPanel.setSelectedIndex(6);
        manageAccScrollTab.getVerticalScrollBar().setValue(0);
    }//GEN-LAST:event_UpdateOrChangeBtnActionPerformed

    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
       ReportTxt.setText("");
    }//GEN-LAST:event_ClearBtnActionPerformed

    private void SubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitBtnActionPerformed
        
        if(!ReportTxt.getText().isBlank() || !ReportTxt.getText().isEmpty()  ){
            
            try {
                database.sendReport(IdTxt.getText(), ReportTxt.getText());
                ReportTxt.setText("");
                JOptionPane.showMessageDialog(this,"Reported Succesfully");
            } catch (SQLException ex) {
                Logger.getLogger(TeacherPage.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else{
            JOptionPane.showMessageDialog(this,"You didn't Enter your Problem");
            ReportTxt.requestFocus();
        }
        
    }//GEN-LAST:event_SubmitBtnActionPerformed

    private void HideViewBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HideViewBtn1ActionPerformed
        Icon iconHide = new ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\hide.png");
        Icon iconView = new ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\view.png");

        if(HideViewBtn1.getModel().isSelected()){
            StaffPassword.setEchoChar((char)0);
            HideViewBtn1.setIcon(iconView);
        }else{
            StaffPassword.setEchoChar('*');
            HideViewBtn1.setIcon(iconHide);
        }
        
    }//GEN-LAST:event_HideViewBtn1ActionPerformed

    private void StaffNICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffNICActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StaffNICActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        String s1,s2,s3,s4,s5,s6,s7,s8;
        s1 = StaffID.getText();
        s2 = String.valueOf(StaffPassword.getPassword());
        s3 = StaffName.getText();
        s4 = StaffRole.getText();
        s5 = StaffGender.getSelectedItem().toString();
        
        String dateofbirth = Date_Format.format(StaffDoB.getDate());
        String Appoiment = Date_Format.format(StaffAppoimentDate.getDate());
        
        java.sql.Date sd1,sd2;
        sd1 = Date.valueOf(dateofbirth);
        sd2 =  Date.valueOf(Appoiment);
 
        s6 = StaffEmail.getText();
        int sm1 = Integer.parseInt(StaffMobile.getText());
        s7 = StaffNIC.getText();
        s8 = StaffAddress.getText() ;

         if(StaffGender.getSelectedIndex() != 0){
            try {
                database.updateTeacherDetails(s1, s3, s2, s4, s5, sd1, sd2, s6, sm1, s7, s8);           
                setUserDetails(s1, s2);
                JOptionPane.showMessageDialog(this,"Your Details Update Successfully ");
                TeacherMainPanel.setSelectedIndex(0);
                myAccScrollTab.getVerticalScrollBar().setValue(0);
            } catch (SQLException ex) {
                Logger.getLogger(TeacherPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this,"Please Select Gender Type!!!");  
        }
         
                        
    }//GEN-LAST:event_UpdateBtnActionPerformed

    private void ViewSubjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewSubjectBtnActionPerformed
        setState(JFrame.ICONIFIED);
        try {
            ViewSubject subject = new ViewSubject();
            subject.setUserValue(userName);
            subject.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TeacherPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_ViewSubjectBtnActionPerformed

    private void StaffGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StaffGenderActionPerformed

    private void ViewMarksBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewMarksBtnActionPerformed
        setState(JFrame.ICONIFIED);
        try {
            ViewMarks teacherMarks = new ViewMarks();
            teacherMarks.setType('T');
            teacherMarks.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TeacherPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ViewMarksBtnActionPerformed

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
         // Get Mouse Position X,Y Co-Ordinates
        posX = evt.getX();
        posY = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // Move all Frame using Mouse 
        setLocation(evt.getXOnScreen()-posX,evt.getYOnScreen()-posY);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void AddMarksBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMarksBtnActionPerformed
        setState(JFrame.ICONIFIED);
        try {
            new AddMarks().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TeacherPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AddMarksBtnActionPerformed

    private void searchStaffKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchStaffKeyPressed
        boolean check = false;
        int index = 0;

        DefaultTableModel StaffTableModel = (DefaultTableModel) StaffsTable.getModel();
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            refreshButton1();
            for(int i = 0; i<StaffsTable.getRowCount(); i++){
                if(StaffsTable.getModel().getValueAt(i,1).toString().toLowerCase().contains(searchStaff.getText().toLowerCase())){
                    check = true;
                    index = Integer.parseInt(StaffsTable.getModel().getValueAt(i, 0).toString());
                    break;
                }else
                check = false;
            }

            int y = Integer.parseInt(StaffsTable.getModel().getValueAt(0, 0).toString())-1;

            if(check  &&  y != index ){
                StaffsTable.addRowSelectionInterval(index-1,index-1 );
                StaffsTable.setSelectionBackground(Color.yellow);
                StaffsTable.setSelectionForeground(Color.black);
                int set = StaffsTable.getSelectedRow();
                StaffTableModel.moveRow(set,set, 0);
                StaffsTable.addRowSelectionInterval(0,0 );
                
                

            }else if(check &&  y == index){
                StaffsTable.addRowSelectionInterval(0,0);
                StaffsTable.setSelectionBackground(Color.yellow);
                StaffsTable.setSelectionForeground(Color.black);
            }else{
                StaffsTable.addRowSelectionInterval(0,0);
                StaffsTable.setSelectionBackground(Color.WHITE);
                StaffsTable.setSelectionForeground(Color.black);
                JOptionPane.showMessageDialog(this, "Results Not Found!!!","Not Found",NORMAL);
            }
        }
    }//GEN-LAST:event_searchStaffKeyPressed

    private void searchStaffKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchStaffKeyReleased

        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getKeyCode() == KeyEvent.VK_DELETE || evt.getKeyCode() == KeyEvent.VK_CAPS_LOCK){
            
        }else{
            try {
                String textBoxString = searchStaff.getText();
                int textBoxStringLength = textBoxString.length();
                ConnectDatabase.addStaffs();

                for(Student data: ConnectDatabase.AllStaffsTable){
                    String  check_from_data = "";
                    
                    for(int i=0; i < textBoxStringLength; i++){
                        if(textBoxStringLength <= data.getName().length()){
                            check_from_data += data.getName().charAt(i);
                        }
                    }
                    if(check_from_data.toLowerCase().equals(textBoxString.toLowerCase()) || check_from_data.toUpperCase().equals(textBoxString.toUpperCase())){
                        searchStaff.setText(data.getName());
                        searchStaff.setSelectionStart(textBoxStringLength);
                        searchStaff.setSelectionEnd(data.getName().length());
                        break;
                    }
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_searchStaffKeyReleased

    private void StaffsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StaffsTableMouseClicked
        int selectedRow = StaffsTable.getSelectedRow();
        if(selectedRow >= 0)
            searchStaff.setText(StaffsTable.getModel().getValueAt(selectedRow, 1).toString());
        else 
            searchStaff.setText("");
                    
        
    }//GEN-LAST:event_StaffsTableMouseClicked

    private void StudentSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StudentSearchKeyPressed
        boolean check = false;
        int index = 0;

        DefaultTableModel StudentTableModel = (DefaultTableModel) StudentTable.getModel();
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            refreshButton2();
            for(int i = 0; i<StudentTable.getRowCount(); i++){
                if(StudentTable.getModel().getValueAt(i,2).toString().toLowerCase().contains(StudentSearch.getText().toLowerCase())){
                    check = true;
                    index = Integer.parseInt(StudentTable.getModel().getValueAt(i, 0).toString());
                    break;
                }else
                check = false;
            }

            int y = Integer.parseInt(StudentTable.getModel().getValueAt(0, 0).toString());

            if(check  &&  y != index ){
                StudentTable.addRowSelectionInterval(index-1,index-1 );
                StudentTable.setSelectionBackground(Color.yellow);
                StudentTable.setSelectionForeground(Color.black);
                int set = StudentTable.getSelectedRow();
                StudentTableModel.moveRow(set,set, 0);
                StudentTable.addRowSelectionInterval(0,0 );

            }else if(check){
                StudentTable.addRowSelectionInterval(0,0 );
                StudentTable.setSelectionBackground(Color.yellow);
                StudentTable.setSelectionForeground(Color.black);
            }else{
                JOptionPane.showMessageDialog(this, "Results Not Found!!!","Not Found",NORMAL);
            }
        }
    }//GEN-LAST:event_StudentSearchKeyPressed

    private void StudentSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StudentSearchKeyReleased
        

        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getKeyCode() == KeyEvent.VK_DELETE || evt.getKeyCode() == KeyEvent.VK_CAPS_LOCK){

        }else{
            try {
                String textBoxString = StudentSearch.getText();
                int textBoxStringLength = textBoxString.length();
                ConnectDatabase.addStaffs();

                for(Student data: ConnectDatabase.StudentsDetails){
                    String  check_from_data = "";

                    for(int i=0; i < textBoxStringLength; i++){
                        if(textBoxStringLength <= data.getName().length()){
                            check_from_data += data.getName().charAt(i);
                        }
                    }
                    if(check_from_data.toLowerCase().equals(textBoxString.toLowerCase()) || check_from_data.toUpperCase().equals(textBoxString.toUpperCase())){
                        StudentSearch.setText(data.getName());
                        StudentSearch.setSelectionStart(textBoxStringLength);
                        StudentSearch.setSelectionEnd(data.getName().length());
                        break;
                    }
                }

            } catch (SQLException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_StudentSearchKeyReleased

    private void StudentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StudentTableMouseClicked
        int selectedRow = StudentTable.getSelectedRow();
        if(selectedRow >= 0)
            StudentSearch.setText(StudentTable.getModel().getValueAt(selectedRow, 2).toString());
        else 
            StudentSearch.setText("");
    }//GEN-LAST:event_StudentTableMouseClicked

    private void StaffsTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_StaffsTableFocusGained
        int selectedRow = StaffsTable.getSelectedRow();
        if(selectedRow >= 0)
            searchStaff.setText(StaffsTable.getModel().getValueAt(selectedRow, 1).toString());
        else 
            searchStaff.setText("");
    }//GEN-LAST:event_StaffsTableFocusGained

    private void StudentTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_StudentTableFocusGained
        int selectedRow = StudentTable.getSelectedRow();
        if(selectedRow >= 0)
            StudentSearch.setText(StudentTable.getModel().getValueAt(selectedRow, 2).toString());
        else 
            StudentSearch.setText("");
    }//GEN-LAST:event_StudentTableFocusGained

    private void SelectTimetableTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectTimetableTypeActionPerformed
        if(SelectTimetableType.getSelectedIndex() == 1){    
            try {
                //Teacher Time Table
//            viewTeacherTimeTable(String tID, String day, int period);
                String tid = userName;
                setTimeTableTeacher(tid);
            } catch (SQLException ex) {
                Logger.getLogger(TeacherPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(SelectTimetableType.getSelectedIndex() == 2){     
           
            try {
                // Class Time table
                String cid = ConnectDatabase.GetTeacherClass(userName);
                setTimeTableClass(cid);
            } catch (SQLException ex) {
                Logger.getLogger(TeacherPage.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else{
            for(int i=0; i< TeacherTimetable.getRowCount(); i++){
                for(int j=0; j<TeacherTimetable.getColumnCount(); j++){
                    TeacherTimetable.setValueAt("", i ,j);
                }
            }
        }
    }//GEN-LAST:event_SelectTimetableTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TeacherPage().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TeacherPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddMarksBtn;
    private javax.swing.JTextArea AddressTxt;
    private javax.swing.JLabel AppoimentTxt;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JLabel DobTxt;
    private javax.swing.JLabel EmailTxt;
    private javax.swing.JLabel GenTxt;
    private javax.swing.JToggleButton HideViewBtn;
    private javax.swing.JToggleButton HideViewBtn1;
    private javax.swing.JLabel IdTxt;
    private javax.swing.JButton LogoutBtn;
    private javax.swing.JLabel MobileTxt;
    private javax.swing.JLabel NameTxt;
    private javax.swing.JLabel NicTxt;
    private javax.swing.JTextArea ReportTxt;
    private javax.swing.JLabel RoleTxt;
    private javax.swing.JComboBox<String> SelectTimetableType;
    private javax.swing.JTextArea StaffAddress;
    private com.toedter.calendar.JDateChooser StaffAppoimentDate;
    private com.toedter.calendar.JDateChooser StaffDoB;
    private javax.swing.JTextField StaffEmail;
    private javax.swing.JComboBox<String> StaffGender;
    private javax.swing.JLabel StaffID;
    private javax.swing.JTextField StaffMobile;
    private javax.swing.JTextField StaffNIC;
    private javax.swing.JTextField StaffName;
    private javax.swing.JPasswordField StaffPassword;
    private javax.swing.JTextField StaffRole;
    private javax.swing.JTable StaffsTable;
    private javax.swing.JTextField StudentSearch;
    private javax.swing.JTable StudentTable;
    private javax.swing.JButton SubmitBtn;
    private javax.swing.JTabbedPane TeacherMainPanel;
    private javax.swing.JPasswordField TeacherPass;
    private javax.swing.JTable TeacherTimetable;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JButton UpdateOrChangeBtn;
    private javax.swing.JButton ViewMarksBtn;
    private javax.swing.JButton ViewSubjectBtn;
    private javax.swing.JLabel YearTerm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JScrollPane manageAccScrollTab;
    private javax.swing.JPanel manageAccTab;
    private javax.swing.JScrollPane myAccScrollTab;
    private javax.swing.JPanel myAccTab;
    private javax.swing.JPanel reportTab;
    private javax.swing.JPanel sclStaffTab;
    private javax.swing.JTextField searchStaff;
    private javax.swing.JPanel stdTab;
    private javax.swing.JPanel subjectTab;
    private javax.swing.JPanel timetableTab;
    private javax.swing.JLabel userNameDisplay;
    // End of variables declaration//GEN-END:variables
    
    
    /*
    *   Display Staffs Details in the School Staffs Tab
    */
    private void setStaffsDetais() throws SQLException{
        ConnectDatabase.AllStaffsTable.clear();
        ConnectDatabase.addStaffs();
        DefaultTableModel StaffTableModel = (DefaultTableModel) StaffsTable.getModel();
        
        int No;
        String Name , Email, Mobile;
            
        for(int i = 0; i<ConnectDatabase.AllStaffsTable.size(); i++){
            No = i+1;            
            Name = ConnectDatabase.AllStaffsTable.get(i).getName() ;            
            Email = ConnectDatabase.AllStaffsTable.get(i).getEmail() ;
            Mobile = ConnectDatabase.AllStaffsTable.get(i).getMobile() ;
            StaffTableModel.addRow(new Object[]{
                No,Name,Email,Mobile
            });
        }
        
    }
    public void refreshButton1(){
        DefaultTableModel dm = (DefaultTableModel) StaffsTable.getModel();
        int rowCount = StaffsTable.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        
        try {
            setStaffsDetais();
        } catch (SQLException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /*********************************/
    
    /*
    *   Display Student Details in the Student Tab
    */
    private void setStudentsDetais() throws SQLException{
        ConnectDatabase.StudentsDetails.clear();
        
        ConnectDatabase.getAllStudents();
        
        DefaultTableModel StaffTableModel = (DefaultTableModel) StudentTable.getModel();
        
        int No;
        String Id, Name , Class, Admission, Email, Mobile;
            
        for(int i = 0; i<ConnectDatabase.StudentsDetails.size(); i++){
            No = i+1;
            Id = ConnectDatabase.StudentsDetails.get(i).getId() ;
            Name = ConnectDatabase.StudentsDetails.get(i).getName() ;
            Class = database.getClassName(ConnectDatabase.StudentsDetails.get(i).getClassID());
            Admission = ConnectDatabase.StudentsDetails.get(i).getAddmissionDate();
            Email = ConnectDatabase.StudentsDetails.get(i).getEmail() ;
            Mobile = ConnectDatabase.StudentsDetails.get(i).getMobile() ;
            
            StaffTableModel.addRow(new Object[]{
                No,Id,Name,Class,Admission,Email,Mobile
            });
        }
        
    }
    /************************************/
    
    public void refreshButton2(){
    DefaultTableModel dm = (DefaultTableModel) StudentTable.getModel();
        int rowCount = StudentTable.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        try {
            setStudentsDetais();
        } catch (SQLException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void setTimeTableClass(String cid) throws SQLException{
        String weekDays[] = {"Monday", "Tuesday","Wednesday","Thursday","Friday"};
        int colValue = TeacherTimetable.getColumnCount();
        int rowValue = TeacherTimetable.getRowCount();  
        String s;
        int period = 0;
        for(int i = 0; i< rowValue; i++){
            for(int j = 0; j< colValue; j++){
                period = i+1;
                s = ConnectDatabase.viewStudentTimeTable(cid,weekDays[j],period);
                TeacherTimetable.setValueAt(s, i, j);
            }
        }
    }
    
     public void setTimeTableTeacher(String cid) throws SQLException{
        String weekDays[] = {"Monday", "Tuesday","Wednesday","Thursday","Friday"};
        int colValue = TeacherTimetable.getColumnCount();
        int rowValue = TeacherTimetable.getRowCount();  
        String s;
        int period = 0;
        for(int i = 0; i< rowValue; i++){
            for(int j = 0; j< colValue; j++){
                period = i+1;
                s = ConnectDatabase.viewTeacherTimeTable(cid,weekDays[j],period);
                TeacherTimetable.setValueAt(s, i, j);
            }
        }
    }
}
