/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package School;

import static School.ConnectDatabase.ClassSubjectDetails;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Kajamohan
 */
public class ViewSubject extends javax.swing.JFrame {

    /**
     * Creates new form ViewSubject
     */
    
    private LocalDate date = LocalDate.now();
    private int posX, posY;
    private String userName;

    
    
    public ViewSubject() throws SQLException {
        initComponents();
        ViewSubjectSetting();
    }
    
    public void setUserValue(String un){
        userName = un;
    }
    
    public void ViewSubjectSetting() throws SQLException{
      dis.setText("");
      theader();
      
      ConnectDatabase.setTerms();
        ConnectDatabase.Terms.forEach(terms -> {
            SelectTerm.addItem(terms);
        });
    }
    
    public void theader() throws SQLException{
        JTableHeader thead = subjectTable.getTableHeader();
        thead.setForeground(Color.BLACK);
        thead.setBackground(Color.CYAN);
        thead.setFont(new Font("Times New Roman",Font.BOLD,25));
        
        // Table Header set to Center Alignment
        TableCellRenderer ren = thead.getDefaultRenderer();
        JLabel headLabel = (JLabel) ren;
        headLabel.setHorizontalAlignment(JLabel.CENTER);
        
        ConnectDatabase.ClassSubjectDetails.clear();
        
        
        DefaultTableModel StaffTableModel = (DefaultTableModel) subjectTable.getModel();
        
        int No;
        String sName, cName;
            
        for(int i = 0; i<ConnectDatabase.ClassSubjectDetails.size(); i++){
            No = i+1;
            sName = ConnectDatabase.ClassSubjectDetails.get(i).getSubject() ;
            cName = ConnectDatabase.ClassSubjectDetails.get(i).getClassName();
            
            StaffTableModel.addRow(new Object[]{
                No,sName,cName
            });
        }
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SelectYear = new com.toedter.calendar.JYearChooser();
        SelectTerm = new javax.swing.JComboBox<>();
        ViewBtn = new javax.swing.JButton();
        dis = new javax.swing.JLabel();
        SubjectTableMain = new javax.swing.JScrollPane();
        subjectTable = new javax.swing.JTable();
        CancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("View Subject");
        setMaximumSize(new java.awt.Dimension(1000, 1000));
        setUndecorated(true);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 10, true));
        jPanel2.setPreferredSize(new java.awt.Dimension(680, 660));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Teacher Subjects");

        jLabel1.setBackground(new java.awt.Color(204, 255, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Year");
        jLabel1.setOpaque(true);

        jLabel2.setBackground(new java.awt.Color(204, 255, 255));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Term");
        jLabel2.setOpaque(true);

        SelectYear.setFont(new java.awt.Font("Times New Roman", 0, 24));
        SelectYear.setValue(date.getYear());

        SelectTerm.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SelectTerm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Term" }));

        ViewBtn.setBackground(new java.awt.Color(0, 102, 102));
        ViewBtn.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        ViewBtn.setForeground(new java.awt.Color(255, 255, 255));
        ViewBtn.setText("View Subjects");
        ViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBtnActionPerformed(evt);
            }
        });

        dis.setBackground(new java.awt.Color(204, 255, 255));
        dis.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        dis.setForeground(new java.awt.Color(0, 0, 102));
        dis.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dis.setEnabled(false);
        dis.setFocusable(false);

        subjectTable.setAutoCreateRowSorter(true);
        subjectTable.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        subjectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No ", "Class Name", "Subject "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        subjectTable.setFillsViewportHeight(true);
        subjectTable.setRowHeight(40);
        subjectTable.setSelectionBackground(new java.awt.Color(51, 153, 255));
        subjectTable.setShowGrid(true);
        subjectTable.setSurrendersFocusOnKeystroke(true);
        subjectTable.getTableHeader().setReorderingAllowed(false);
        SubjectTableMain.setViewportView(subjectTable);
        if (subjectTable.getColumnModel().getColumnCount() > 0) {
            subjectTable.getColumnModel().getColumn(0).setResizable(false);
            subjectTable.getColumnModel().getColumn(0).setPreferredWidth(15);
            subjectTable.getColumnModel().getColumn(1).setResizable(false);
            subjectTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            subjectTable.getColumnModel().getColumn(2).setResizable(false);
            subjectTable.getColumnModel().getColumn(2).setPreferredWidth(200);
        }

        CancelBtn.setBackground(new java.awt.Color(0, 102, 102));
        CancelBtn.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        CancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SelectYear, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(SelectTerm, 0, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(43, 43, 43)
                                .addComponent(ViewBtn))
                            .addComponent(SubjectTableMain)
                            .addComponent(dis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SelectYear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SelectTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(dis, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(SubjectTableMain, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void ViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBtnActionPerformed
        int Y = SelectYear.getValue();
        int T = SelectTerm.getSelectedIndex();
        String year,term;
        year = Integer.toString(Y);
        term = SelectTerm.getSelectedItem().toString();
        
        ClearTable();
        
        if( Y < date.getYear()+1 && T>0 ){
         
            try {
                dis.setVisible(true);
                dis.setText(year+"\t - \t"+term+"\t - \tSubjects ");
                dis.setOpaque(true);
                displaySubjects();
            } catch (SQLException ex) {
                Logger.getLogger(ViewSubject.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            dis.setText("");

            if( Y > date.getYear()+1){
                JOptionPane.showMessageDialog(null,"Selected Year is invalid!" );
                SelectYear.setYear(date.getYear());
            }else
            JOptionPane.showMessageDialog(null,"Please Select the Correct Term!" );

        }
    }//GEN-LAST:event_ViewBtnActionPerformed

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
         // Get Mouse Position X,Y Co-Ordinates
        posX = evt.getX();
        posY = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
       // Move all Frame using Mouse 
        setLocation(evt.getXOnScreen()-posX,evt.getYOnScreen()-posY);
    }//GEN-LAST:event_jPanel2MouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ViewSubject().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ViewSubject.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JComboBox<String> SelectTerm;
    private com.toedter.calendar.JYearChooser SelectYear;
    private javax.swing.JScrollPane SubjectTableMain;
    private javax.swing.JButton ViewBtn;
    private javax.swing.JLabel dis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTable subjectTable;
    // End of variables declaration//GEN-END:variables
    public void ClearTable(){
        DefaultTableModel subjectTableModel = (DefaultTableModel) subjectTable.getModel();
        
        int rowCount = subjectTableModel.getRowCount();
        
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            subjectTableModel.removeRow(i);
        }
    }
    public void displaySubjects() throws SQLException{
        DefaultTableModel subjectTableModel = (DefaultTableModel) subjectTable.getModel();
    
        int Y = SelectYear.getValue();
        int T = SelectTerm.getSelectedIndex();
        ClassSubjectDetails.clear();
        ConnectDatabase.getClassAndSubject(userName,T,Y);
//        subjectTable
        int No;
        String  cName , sName;
        
        if(ClassSubjectDetails.size() > 0){
           for(int i = 0; i<ClassSubjectDetails.size(); i++){
            No = i+1;
            cName = ClassSubjectDetails.get(i).getClassName();
            sName = ClassSubjectDetails.get(i).getSubject();
            
            subjectTableModel.addRow(new Object[]{
                No,cName,sName
            });
            } 
        }else{
            JOptionPane.showMessageDialog(this,"Subjects Not Found!!","Not Found Message",NORMAL );
        }
        
    }
  
}
