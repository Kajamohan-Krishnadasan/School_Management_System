/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package School;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;


/**
 *
 * @author Kajamohan
 */
public class AddNewStaffs extends javax.swing.JFrame {

    /*
    *   Creates new form AddNewStaffs
    */
    
    ConnectDatabase database = new ConnectDatabase();
    Date date = new Date();
    private String StaffTypeAgin;
    SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy-MM-dd");
    
    private int posX, posY;
    
    public AddNewStaffs() {
        initComponents(); 
    }
    
    public  void modifyStaffs(String sID) throws SQLException{
        StaffLabel.setText("Modify Staff Details");
        
        String userType = "";
        if (sID.charAt(0) == 'P' || sID.charAt(0) == 'C') {
            userType = "admintab";
        } else if (sID.charAt(0) == 'T') {
            userType = "teachertab";
        }
        
        String recivedValue[] = database.getDetails(sID, userType);
    
    
        StaffID.setText(recivedValue[0]);
        StaffName.setText(recivedValue[1]);
        StaffRole.setText(recivedValue[2]);
        String GenTxt = recivedValue[3];
        if(GenTxt.contains("female"))
            StaffGender.setSelectedIndex(2);
        else
            StaffGender.setSelectedIndex(1);
        
        StaffDoB.setDate(ConnectDatabase.DOBdate);
        StaffAppoimentDate.setDate(ConnectDatabase.APPOIMENTdate);

        StaffEmail.setText(recivedValue[6]);
        StaffMobile.setText(recivedValue[7]);
        StaffNIC.setText(recivedValue[8]);
        StaffAddress.setText(recivedValue[9]);
        StaffPassword.setText(database.getPassword(sID));
        StaffPassword.setEditable(true);
        
        OkBtn.setText("Update");
    }
    
    public void StaffSetting(char staffType){
        StaffDoB.setDate(date);
        StaffAppoimentDate.setDate(date);
         try {
            String ID;
            if(staffType == 'P'){
                ID = database.getPrincipalFinalID();
                StaffTypeAgin = " Principal ";
                StaffRole.setText("");
                StaffRole.setEditable(true);
                
            }else if(staffType == 'T'){
                ID = database.getTeacherFinalID();
                StaffTypeAgin = " Teacher ";
                StaffRole.setText("Teacher");
                StaffRole.setEditable(false);
            }else{
                ID = database.getClearkFinalID();
                StaffTypeAgin = " Cleark ";
                StaffRole.setText("Cleark");
                StaffRole.setEditable(false);
            }
            int id = Integer.valueOf(ID)+1;  
            
            if(id < 10){
                StaffID.setText(staffType+"000"+String.valueOf(id));
                StaffPassword.setText(staffType+"000"+String.valueOf(id));
            }else if(id < 100){
                StaffID.setText(staffType+"00"+String.valueOf(id));
                StaffPassword.setText(staffType+"00"+String.valueOf(id));
            }else if(id < 1000){
                StaffID.setText(staffType+"0"+String.valueOf(id));
                StaffPassword.setText(staffType+"0"+String.valueOf(id));
            }else{
                StaffID.setText(staffType+String.valueOf(id));
                StaffPassword.setText(staffType+String.valueOf(id));
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(AddNewClass.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        StaffID = new javax.swing.JLabel();
        StaffName = new javax.swing.JTextField();
        StaffRole = new javax.swing.JTextField();
        StaffGender = new javax.swing.JComboBox<>();
        StaffEmail = new javax.swing.JTextField();
        StaffMobile = new javax.swing.JTextField();
        StaffNIC = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        StaffAddress = new javax.swing.JTextArea();
        OkBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        StaffPassword = new javax.swing.JPasswordField();
        HideViewBtn = new javax.swing.JToggleButton();
        StaffDoB = new com.toedter.calendar.JDateChooser();
        StaffAppoimentDate = new com.toedter.calendar.JDateChooser();
        StaffLabel = new javax.swing.JLabel();
        CloseLabel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add New Staffs");
        setUndecorated(true);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 10, true));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.setAutoscrolls(true);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Staff ID : ");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Staff Password : ");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Staff Name : ");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Gender :");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Date of Birth :");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Appoiment Date :");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Role :");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Email :");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Mobile :");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("NIC Number :");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Address :");

        StaffID.setBackground(new java.awt.Color(204, 255, 255));
        StaffID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        StaffID.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        StaffID.setOpaque(true);

        StaffName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        StaffRole.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StaffRole.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                StaffRoleKeyReleased(evt);
            }
        });

        StaffGender.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StaffGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select the Gender", "Male", "Female" }));

        StaffEmail.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        StaffMobile.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        StaffNIC.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jScrollPane2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        StaffAddress.setColumns(20);
        StaffAddress.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StaffAddress.setRows(5);
        jScrollPane2.setViewportView(StaffAddress);

        OkBtn.setBackground(new java.awt.Color(0, 102, 102));
        OkBtn.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        OkBtn.setForeground(new java.awt.Color(255, 255, 255));
        OkBtn.setText("OK");
        OkBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        OkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkBtnActionPerformed(evt);
            }
        });

        CancelBtn.setBackground(new java.awt.Color(0, 102, 102));
        CancelBtn.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        CancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        CancelBtn.setText("Cancel");
        CancelBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        resetBtn.setBackground(new java.awt.Color(0, 102, 102));
        resetBtn.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        resetBtn.setForeground(new java.awt.Color(255, 255, 255));
        resetBtn.setText("Reset");
        resetBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        StaffPassword.setEditable(false);
        StaffPassword.setBackground(new java.awt.Color(204, 255, 255));
        StaffPassword.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StaffPassword.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        HideViewBtn.setForeground(new java.awt.Color(0, 204, 0));
        HideViewBtn.setIcon(new javax.swing.ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\hide.png")); // NOI18N
        HideViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HideViewBtnActionPerformed(evt);
            }
        });

        StaffDoB.setDateFormatString("d,MMMM,YYYY");
        StaffDoB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        StaffDoB.setMaximumSize(new java.awt.Dimension(28, 27));
        StaffDoB.setMinSelectableDate(new java.util.Date(-62135785701000L));
        StaffDoB.setOpaque(false);

        StaffAppoimentDate.setDateFormatString("d,MMMM,YYYY");
        StaffAppoimentDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        StaffAppoimentDate.setMaximumSize(new java.awt.Dimension(28, 27));
        StaffAppoimentDate.setMinSelectableDate(new java.util.Date(-62135785701000L));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(OkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(StaffNIC)
                            .addComponent(StaffName)
                            .addComponent(StaffRole)
                            .addComponent(StaffGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(StaffID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(StaffEmail)
                            .addComponent(StaffMobile)
                            .addComponent(jScrollPane2)
                            .addComponent(StaffPassword)
                            .addComponent(StaffAppoimentDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StaffDoB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addComponent(HideViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StaffPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(HideViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffName, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffRole, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffGender, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StaffDoB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StaffAppoimentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StaffNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        StaffID.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jScrollPane1.setViewportView(jPanel1);

        StaffLabel.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        StaffLabel.setForeground(new java.awt.Color(0, 102, 102));
        StaffLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StaffLabel.setText("New Staff");

        CloseLabel.setBackground(new java.awt.Color(255, 255, 255));
        CloseLabel.setIcon(new javax.swing.ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\icons8-close-48.png")); // NOI18N
        CloseLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CloseLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CloseLabelMouseExited(evt);
            }
        });
        CloseLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseLabelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(StaffLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(CloseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StaffLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CloseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void OkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkBtnActionPerformed
        String s1,s2,s3,s4,s5,s6,s7,s8;
        String okBtnString = OkBtn.getText();
        
        char SType = StaffID.getText().charAt(0);
        
        if(checkFillDetails()){   

            s1 = StaffID.getText();
            s2 = String.valueOf(StaffPassword.getPassword());
            s3 = StaffName.getText();
            s4 = StaffRole.getText(); 
            s5 = StaffGender.getSelectedItem().toString();

            String dateofbirth = Date_Format.format(StaffDoB.getDate());
            String Appoiment = Date_Format.format(StaffAppoimentDate.getDate());

            java.sql.Date sd1,sd2;
            sd1 = java.sql.Date.valueOf(dateofbirth);
            sd2 =  java.sql.Date.valueOf(Appoiment);

            s6 = StaffEmail.getText();
            int sm1 = Integer.parseInt(StaffMobile.getText());
            s7 = StaffNIC.getText();
            s8 = StaffAddress.getText() ;

            if(StaffGender.getSelectedIndex() != 0 && checkFillDetails()){
                try {
    
                    if( ( SType == 'P' || SType == 'C' ) && okBtnString.equals("OK") ){
                        database.addNewAdmin(s1, s2, s3, s4, s5, sd1, sd2, s6, sm1, s7, s8);
                        callYesNo();
                        
                    }else if(  SType == 'T' && okBtnString.equals("OK") ){
                        database.addNewTeacher(s1, s2, s3, s4, s5, sd1, sd2, s6, sm1, s7, s8);
                        callYesNo();
                        
                    }else if( ( SType == 'P' || SType == 'C'  ) && okBtnString.equals("Update") ){
                        database.updateAdminDetails(s1, s3, s2, s4, s5, sd1, sd2, s6, sm1, s7, s8);
                        JOptionPane.showMessageDialog(this,"Staff Details Update Successfully");
                        
                        this.dispose();
                        
                    }else if(SType == 'T' && okBtnString.equals("Update") ){                     
                       database.updateTeacherDetails(s1, s3, s2, s4, s5, sd1, sd2, s6, sm1, s7, s8);
                       JOptionPane.showMessageDialog(this,"Staff Details Update Successfully");
                       this.dispose();
                    }


                } catch (SQLException ex) {
                    Logger.getLogger(TeacherPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else if(StaffGender.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(this,"Please Select Gender Type!!!");  
            }

        }else{
            JOptionPane.showMessageDialog(this,"Please Check the Values!!");  
            jScrollPane1.getVerticalScrollBar().setValue(0);
        }
        
    }//GEN-LAST:event_OkBtnActionPerformed

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        StaffName.setText("");
        StaffRole.setText("");
        StaffEmail.setText("");
        StaffMobile.setText("");
        StaffNIC.setText("");
        StaffAddress.setText("");
        
        StaffGender.setSelectedIndex(0);
        
        StaffDoB.setDate(date);
        StaffAppoimentDate.setDate(date);
        JOptionPane.showMessageDialog(null,"Reset Successfully");
    }//GEN-LAST:event_resetBtnActionPerformed

    private void HideViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HideViewBtnActionPerformed
        Icon iconHide = new ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\hide.png");
        Icon iconView = new ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\view.png");

        if(HideViewBtn.getModel().isSelected()){
            StaffPassword.setEchoChar((char)0);
            HideViewBtn.setIcon(iconView);
        }else{
            StaffPassword.setEchoChar('*');
            HideViewBtn.setIcon(iconHide);
        }
    }//GEN-LAST:event_HideViewBtnActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // Get Mouse Position X,Y Co-Ordinates
        posX = evt.getX();
        posY = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        /// Move all Frame using Mouse 
        setLocation(evt.getXOnScreen()-posX,evt.getYOnScreen()-posY);
    }//GEN-LAST:event_formMouseDragged

    private void StaffRoleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StaffRoleKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getKeyCode() == KeyEvent.VK_DELETE){
            
        }else{
            String to_check = StaffRole.getText();
            int to_check_len = to_check.length();
            ConnectDatabase.addPrincipalTypes();

            for(String data: ConnectDatabase.PrincpalTypes){
                String  check_from_data = "";
                for(int i=0; i < to_check_len; i++){
                    if(to_check_len <= data.length()){
                        check_from_data += data.charAt(i);
                    }
                }
                if(check_from_data.equals(to_check)){
                   StaffRole.setText(data);
                   StaffRole.setSelectionStart(to_check_len);
                   StaffRole.setSelectionEnd(data.length());
                   break;
                }
            }
        }
        
        
    }//GEN-LAST:event_StaffRoleKeyReleased

    private void CloseLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseLabelMouseEntered
        CloseLabel.setBackground(Color.red);
    }//GEN-LAST:event_CloseLabelMouseEntered

    private void CloseLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseLabelMouseExited
        CloseLabel.setBackground(Color.WHITE);
    }//GEN-LAST:event_CloseLabelMouseExited

    private void CloseLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseLabelActionPerformed
        this.dispose();
    }//GEN-LAST:event_CloseLabelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewStaffs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewStaffs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewStaffs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewStaffs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewStaffs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JButton CloseLabel;
    private javax.swing.JToggleButton HideViewBtn;
    private javax.swing.JButton OkBtn;
    private javax.swing.JTextArea StaffAddress;
    private com.toedter.calendar.JDateChooser StaffAppoimentDate;
    private com.toedter.calendar.JDateChooser StaffDoB;
    private javax.swing.JTextField StaffEmail;
    private javax.swing.JComboBox<String> StaffGender;
    private javax.swing.JLabel StaffID;
    private javax.swing.JLabel StaffLabel;
    private javax.swing.JTextField StaffMobile;
    private javax.swing.JTextField StaffNIC;
    private javax.swing.JTextField StaffName;
    private javax.swing.JPasswordField StaffPassword;
    private javax.swing.JTextField StaffRole;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton resetBtn;
    // End of variables declaration//GEN-END:variables

    private void callYesNo(){
        int result = JOptionPane.showConfirmDialog(this,"New Staff Added Successfully\nDo You Want to add Another"+StaffTypeAgin+"?","New Staff",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE); 
                
        if(result == JOptionPane.NO_OPTION){
            this.dispose();
        }else{
            StaffName.setText("");
            StaffRole.setText("");
            StaffGender.setSelectedIndex(0);
            StaffEmail.setText("");
            StaffMobile.setText("");
            StaffNIC.setText("");
            StaffAddress.setText("");
            StaffSetting(StaffID.getText().charAt(1));
        }
    }
    
    private boolean checkFillDetails(){
        boolean isChecked = false;
        Pattern pattern;
        String regex1, regex2;
        
        //Regular Expression   
        regex1 = "^(.+)@(.+)$";  
        pattern = Pattern.compile(regex1); 
        Matcher isEmailMatched = pattern.matcher(StaffEmail.getText());  
        
        // contains only digits
        regex2 = "[0-9]+";
        pattern = Pattern.compile(regex2); 
        Matcher isMobileMatched = pattern.matcher(StaffMobile.getText());  
        
        if(StaffName.getText().isBlank()){
            StaffName.requestFocus();
            isChecked = false;
        }else if(StaffRole.getText().isBlank()){
            StaffRole.requestFocus();
            isChecked = false;
        }else if(StaffGender.getSelectedIndex() == 0){
            StaffGender.requestFocus();
            isChecked = false;
        }else if(StaffEmail.getText().isBlank() || !isEmailMatched.matches()){
            StaffEmail.requestFocus();
            isChecked = false;
        }else if(StaffMobile.getText().isBlank() || !isMobileMatched.matches() || StaffMobile.getText().length() != 9 ){
            StaffMobile.requestFocus();
            isChecked = false;
        }else if(StaffNIC.getText().isBlank()){
            StaffNIC.requestFocus();
            isChecked = false;
        }else if(StaffAddress.getText().isBlank()){
            StaffAddress.requestFocus();
            isChecked = false;
        }else if(!checkRole()){
            StaffRole.requestFocus();
            isChecked = false;
        }else{
            isChecked = true ;
        }
        return isChecked;
    }
    
    private boolean checkRole(){
        
        String s = StaffRole.getText();
        boolean b = false;
        ConnectDatabase.addRoleTypes();
        
        for(String m: ConnectDatabase.RoleTypes){
            if(s.equals(m)){
                b = true;
                break;
            }               
        }
        return b;
    }
    
    
}
