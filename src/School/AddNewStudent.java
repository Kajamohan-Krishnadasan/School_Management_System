/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package School;

import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Kajamohan
 */
public class AddNewStudent extends javax.swing.JFrame {

    /**
     * Creates new form AddNewStudent
     */
    
    ConnectDatabase database = new ConnectDatabase();
    //Getting Cuurent Date
    Date date;
    SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy-MM-dd");
    private int posX, posY;
        
    public AddNewStudent() throws SQLException {
        this.date = new Date();
        initComponents();
        StudentSetting();
        AutoCompleteDecorator.decorate(StdClassName);
    }
    
    public void StudentSetting() throws SQLException{
        DoBCalander.setDate(date);
        AddmissionCalander.setDate(date);
         
        String ID = database.getStudentFinalID();
        int id = Integer.valueOf(ID)+1;    
        if(id < 10){
            StdID.setText("S000"+String.valueOf(id));
            StdPass.setText("S000"+String.valueOf(id));
        }else if(id < 100){
            StdID.setText("S00"+String.valueOf(id));
            StdPass.setText("S00"+String.valueOf(id));
        }else if(id < 1000){
            StdID.setText("S0"+String.valueOf(id));
            StdPass.setText("S0"+String.valueOf(id));
        }else{
            StdID.setText("S"+String.valueOf(id));
            StdPass.setText("S"+String.valueOf(id));
        }
            
        ConnectDatabase.setClassNames();
        ConnectDatabase.ClassDetails.forEach(t->{
            StdClassName.addItem(t.getName());
        });
    }
    
    public  void modifyStudents(String sID) throws SQLException{
        StudentLabel.setText("Modify Student Details");
        
        String recivedValue[] = database.getStudentDetails(sID, "studenttab");
    
        StdID.setText(recivedValue[0]);
        StdName.setText(recivedValue[1]);
        String GenTxt = recivedValue[2];
        if(GenTxt.contains("female"))
            StdGender.setSelectedIndex(2);
        else
            StdGender.setSelectedIndex(1);
        
        DoBCalander.setDate(ConnectDatabase.DOBdate);
        AddmissionCalander.setDate(ConnectDatabase.APPOIMENTdate);

        StdEmail.setText(recivedValue[5]);
        MobileNo.setText(recivedValue[6]);
        StdAddress.setText(recivedValue[7]);
        String clsID = recivedValue[8];
        
        String ClassName = database.getClassName(clsID);
        int temp = 0;
        for(int i = 0; i < StdClassName.getItemCount(); i++){
            if(StdClassName.getItemAt(i).equals(ClassName)){
                temp = i;
                break;
            }
        }
        StdClassName.setSelectedIndex(temp);
        StdPass.setText(database.getPassword(sID));
        StdPass.setEditable(true);
        
        OkBtn.setText("Update");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        StdID = new javax.swing.JLabel();
        StdName = new javax.swing.JTextField();
        StdGender = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        StdEmail = new javax.swing.JTextField();
        MobileNo = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        StdAddress = new javax.swing.JTextArea();
        DoBCalander = new com.toedter.calendar.JDateChooser();
        AddmissionCalander = new com.toedter.calendar.JDateChooser();
        CancelBtn = new javax.swing.JButton();
        OkBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        HideViewBtn = new javax.swing.JToggleButton();
        StdPass = new javax.swing.JPasswordField();
        StdClassName = new javax.swing.JComboBox<>();
        StudentLabel = new javax.swing.JLabel();
        CloseLabel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add New  Student");
        setBackground(new java.awt.Color(51, 153, 0));
        setUndecorated(true);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 10, true));
        jPanel1.setForeground(new java.awt.Color(0, 153, 153));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel2.setAutoscrolls(true);
        jPanel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("Student ID : ");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Student Name : ");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Gender :");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Date of Birth :");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Addmission Date :");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 102, 102));
        jLabel20.setText("Email : ");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(102, 102, 102));
        jLabel21.setText("Mobile :");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(102, 102, 102));
        jLabel22.setText("Class : ");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("Address :");

        StdID.setBackground(new java.awt.Color(204, 255, 255));
        StdID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        StdID.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        StdID.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        StdID.setEnabled(false);
        StdID.setOpaque(true);

        StdName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        StdGender.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StdGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select the Gender", "Male", "Female" }));
        StdGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StdGenderActionPerformed(evt);
            }
        });

        jLabel24.setBackground(new java.awt.Color(0, 153, 153));
        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(102, 102, 102));
        jLabel24.setText("Password : ");

        StdEmail.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        MobileNo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        StdAddress.setColumns(20);
        StdAddress.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StdAddress.setRows(5);
        StdAddress.setMaximumSize(new java.awt.Dimension(286, 109));
        StdAddress.setPreferredSize(new java.awt.Dimension(286, 109));
        jScrollPane3.setViewportView(StdAddress);

        DoBCalander.setDateFormatString("d,MMMM,YYYY");
        DoBCalander.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        DoBCalander.setMaximumSize(new java.awt.Dimension(28, 27));
        DoBCalander.setMinSelectableDate(new java.util.Date(-62135785701000L));

        AddmissionCalander.setDateFormatString("d,MMMM,YYYY");
        AddmissionCalander.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        CancelBtn.setBackground(new java.awt.Color(0, 102, 102));
        CancelBtn.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        CancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        CancelBtn.setText("Cancel");
        CancelBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        OkBtn.setBackground(new java.awt.Color(0, 102, 102));
        OkBtn.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        OkBtn.setForeground(new java.awt.Color(255, 255, 255));
        OkBtn.setText("OK");
        OkBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        OkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkBtnActionPerformed(evt);
            }
        });

        resetBtn.setBackground(new java.awt.Color(0, 102, 102));
        resetBtn.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        resetBtn.setForeground(new java.awt.Color(255, 255, 255));
        resetBtn.setText("Reset");
        resetBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        HideViewBtn.setForeground(new java.awt.Color(0, 204, 0));
        HideViewBtn.setIcon(new javax.swing.ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\hide.png")); // NOI18N
        HideViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HideViewBtnActionPerformed(evt);
            }
        });

        StdPass.setEditable(false);
        StdPass.setBackground(new java.awt.Color(204, 255, 255));
        StdPass.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StdPass.setForeground(new java.awt.Color(153, 153, 153));
        StdPass.setAutoscrolls(false);
        StdPass.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        StdClassName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StdClassName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Class" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(OkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(StdEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DoBCalander, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StdID, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddmissionCalander, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StdName, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StdGender, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3)
                            .addComponent(StdPass, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HideViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(StdClassName, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StdID, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StdPass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(HideViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StdName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StdGender, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DoBCalander, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AddmissionCalander, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StdEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(StdClassName))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        StdID.setEnabled(false);

        jScrollPane2.setViewportView(jPanel2);

        StudentLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        StudentLabel.setForeground(new java.awt.Color(0, 153, 153));
        StudentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        StudentLabel.setText("Student Details");

        CloseLabel.setBackground(new java.awt.Color(255, 255, 255));
        CloseLabel.setIcon(new javax.swing.ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\icons8-close-48.png")); // NOI18N
        CloseLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CloseLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CloseLabelMouseExited(evt);
            }
        });
        CloseLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseLabelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(StudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CloseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StudentLabel)
                    .addComponent(CloseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void StdGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StdGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StdGenderActionPerformed

    private void OkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkBtnActionPerformed
        String s1,s2,s3,s4,s5,s6,s7,s8;
        String okBtnString = OkBtn.getText();
        
        char SType = StdID.getText().charAt(0);
        
        if(checkFillDetails()){   

            s1 = StdID.getText();
            s2 = String.valueOf(StdPass.getPassword());
            s3 = StdName.getText();            
            s5 = StdGender.getSelectedItem().toString();

            String dateofbirth = Date_Format.format(DoBCalander.getDate());
            String Admission = Date_Format.format(AddmissionCalander.getDate());

            java.sql.Date sd1,sd2;
            sd1 = java.sql.Date.valueOf(dateofbirth);
            sd2 =  java.sql.Date.valueOf(Admission);

            s6 = StdEmail.getText();
            int sm1 = Integer.parseInt(MobileNo.getText());            
            s8 = StdAddress.getText() ;
            int  classID = StdClassName.getSelectedIndex()-1;    
            
            s7 = ConnectDatabase.ClassDetails.get(classID).getId();

            if(StdGender.getSelectedIndex() != 0 && checkFillDetails() && StdClassName.getSelectedIndex() != 0){
                try {
                    if(okBtnString.equals("OK")){
                        database.addNewStudent(s1, s2, s3, s5, sd1, sd2, s6, sm1, s8, s7);
                        callYesNo();
                    }else if(okBtnString.equals("Update")){
                        database.updateStudentDetails(s1, s3, s5, sd1, sd2, s6, sm1, s8, s7);
                        JOptionPane.showMessageDialog(this,"Student Details Update Successfully");
                        this.dispose();
                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(AddNewStudent.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }

        }else{
            JOptionPane.showMessageDialog(this,"Please Check the Values!!");  
            jScrollPane2.getVerticalScrollBar().setValue(0);
        }
    }//GEN-LAST:event_OkBtnActionPerformed

    private void HideViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HideViewBtnActionPerformed
        Icon iconHide = new ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\hide.png");
        Icon iconView = new ImageIcon("F:\\UINVERSITY OF JAFFNA NOTES\\5th Semester\\SQL Project\\SchoolManagementSystem\\src\\School\\Icons\\view.png");
        
        if(HideViewBtn.getModel().isSelected()){
            StdPass.setEchoChar((char)0);
            HideViewBtn.setIcon(iconView);
        }else{
            StdPass.setEchoChar('*');
            HideViewBtn.setIcon(iconHide);
        }
    }//GEN-LAST:event_HideViewBtnActionPerformed

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        StdName.setText("");
        StdEmail.setText("");
        MobileNo.setText("");
        StdClassName.setSelectedIndex(0);
        StdAddress.setText("");
        
        DoBCalander.setDate(date);
        AddmissionCalander.setDate(date);
        StdGender.setSelectedIndex(0);
    }//GEN-LAST:event_resetBtnActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // Get Mouse Position X,Y Co-Ordinates
        posX = evt.getX();
        posY = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // Move all Frame using Mouse 
        setLocation(evt.getXOnScreen()-posX,evt.getYOnScreen()-posY);
    }//GEN-LAST:event_formMouseDragged

    private void CloseLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseLabelMouseEntered
        CloseLabel.setBackground(Color.red);
    }//GEN-LAST:event_CloseLabelMouseEntered

    private void CloseLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseLabelMouseExited
        CloseLabel.setBackground(Color.WHITE);
    }//GEN-LAST:event_CloseLabelMouseExited

    private void CloseLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseLabelActionPerformed
        this.dispose();
    }//GEN-LAST:event_CloseLabelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AddNewStudent().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(AddNewStudent.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser AddmissionCalander;
    private javax.swing.JButton CancelBtn;
    private javax.swing.JButton CloseLabel;
    private com.toedter.calendar.JDateChooser DoBCalander;
    private javax.swing.JToggleButton HideViewBtn;
    private javax.swing.JTextField MobileNo;
    private javax.swing.JButton OkBtn;
    private javax.swing.JTextArea StdAddress;
    private javax.swing.JComboBox<String> StdClassName;
    private javax.swing.JTextField StdEmail;
    private javax.swing.JComboBox<String> StdGender;
    private javax.swing.JLabel StdID;
    private javax.swing.JTextField StdName;
    private javax.swing.JPasswordField StdPass;
    private javax.swing.JLabel StudentLabel;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton resetBtn;
    // End of variables declaration//GEN-END:variables
    
    private void callYesNo() throws SQLException{
        int result = JOptionPane.showConfirmDialog(this,"New Student Added Successfully\nDo You Want to add Another Student?","New Staff",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE); 
                
        if(result == JOptionPane.NO_OPTION){
            this.dispose();
        }else{
            StudentSetting();
            StdName.setText("");
            StdGender.setSelectedIndex(0);
            StdEmail.setText("");
            MobileNo.setText("");
            StdAddress.setText("");
        }
    }
    
    private boolean checkFillDetails(){
        boolean isChecked = false;
        Pattern pattern;
        String regex1, regex2;
        
        //Regular Expression   
        regex1 = "^(.+)@(.+)$";  
        pattern = Pattern.compile(regex1); 
        Matcher isEmailMatched = pattern.matcher(StdEmail.getText());  
        
        // contains only digits
        regex2 = "[0-9]+";
        pattern = Pattern.compile(regex2); 
        Matcher isMobileMatched = pattern.matcher(MobileNo.getText());  
        
        if(StdName.getText().isBlank()){
            StdName.requestFocus();
            isChecked = false;
        }else if(StdGender.getSelectedIndex() == 0){
            StdGender.requestFocus();
            isChecked = false;
        }else if(StdEmail.getText().isBlank() || !isEmailMatched.matches()){
            StdEmail.requestFocus();
            isChecked = false;
        }else if(MobileNo.getText().isBlank() || !isMobileMatched.matches() || MobileNo.getText().length() != 10){
            MobileNo.requestFocus();
            isChecked = false;
        }else if(StdAddress.getText().isBlank()){
            StdAddress.requestFocus();
            isChecked = false;
        }else if(StdClassName.getSelectedIndex() == 0){
            StdClassName.requestFocus();
            isChecked = false;
        }else{
            isChecked = true ;
        }
        
//       StaffRole.setBackground(Color.red);
        return isChecked;
    }
    
}
